[tox]
mintoxversion = 2.3
envlist = check_readme,flake8,covclean,py38,coverage,integrationtests

[testenv]
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH SOLC_BINARY INTEGRATION_TESTS_REPO
deps =
    pip-tools
    coverage
commands =
    pip-sync requirements/tests.txt
    pip install -e .
    coverage run -m pytest  --random-order {posargs:tests}

[testenv:covclean]
basepython = python3.8
skip_install = true
deps = coverage
commands = coverage erase

[testenv:coverage]
basepython = python3.8
skip_install = true
deps = coverage
commands =
    coverage combine
    coverage report

[testenv:check_readme]
skip_install = true
deps = readme_renderer
commands = python setup.py check --restructuredtext --strict

[testenv:flake8]
basepython = python3.8
skip_install = true
deps =
    -rrequirements/tests.txt
commands =
    flake8
    #isort --check-only --recursive --quiet --project gsy_e --line-width 99 src tests setup.py fabfile.py

[testenv:integrationtests]
basepython = python3.8
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH SOLC_BINARY INTEGRATION_TESTS_REPO
deps =
    -rrequirements/tests.txt
allowlist_externals =
    git
    /bin/rm
    /bin/ln
commands_pre =
    pip install -e .
    git clone {env:INTEGRATION_TESTS_REPO:git@github.com:gridsingularity/gsy-backend-integration-tests.git} {envtmpdir}/gsy-backend-integration-tests
commands =
    ln -sf {envtmpdir}/gsy-backend-integration-tests/gsy_e_tests/integration_tests/ ./integration_tests
    behave --tags=-slow --tags=-disabled ./integration_tests/
commands_post =
    rm ./integration_tests

[flake8]
max-line-length = 99
exclude = .tox,wiki,.cache,.d3a,.hypothesis,.pytest_cache,vagrant,requirements,venv

[testenv:codecoverage]
basepython = python3.8
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH SOLC_BINARY
deps =
    pip-tools
    coverage
commands =
    pip-sync requirements/tests.txt
    pip install -e .
    coverage run -m pytest --random-order {posargs:tests}
    coverage combine
    coverage report

[testenv:ci]
basepython = python3.8
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH SOLC_BINARY GSY_FRAMEWORK_BRANCH INTEGRATION_TESTS_REPO
deps =
    pip-tools
    coverage
allowlist_externals =
    git
    /bin/rm
    /bin/ln
    bash
commands_pre =
    python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    pip-sync requirements/tests.txt requirements/pandapower.txt
    pip install -e .
    pip uninstall -y gsy-framework
    pip install git+https://github.com/gridsingularity/gsy-framework@{env:GSY_FRAMEWORK_BRANCH:master}
commands =
    flake8
    coverage run -m pytest --random-order {posargs:tests}
    coverage combine
    coverage xml
    coverage report
    git clone {env:INTEGRATION_TESTS_REPO:git@github.com:gridsingularity/gsy-backend-integration-tests.git} {envtmpdir}/gsy-backend-integration-tests
    ln -sf {envtmpdir}/gsy-backend-integration-tests/gsy_e_tests/integration_tests/ ./integration_tests
    bash -c 'for f in ./integration_tests/*.feature; do behave --tags=-slow --tags=-disabled "$f" || exit 1; done'
commands_post =
    rm ./integration_tests

[testenv:test_dispatch_events_top_to_bottom]
basepython = python3.8
deps =
    -rrequirements/tests.txt
setenv =
    DISPATCH_EVENTS_BOTTOM_TO_TOP = False
allowlist_externals =
    git
    /bin/ln
    /bin/rm
    bash
commands =
    pip install -e .
    git clone {env:INTEGRATION_TESTS_REPO:git@github.com:gridsingularity/gsy-backend-integration-tests.git} {envtmpdir}/gsy-backend-integration-tests
    ln -sf {envtmpdir}/gsy-backend-integration-tests/gsy_e_tests/integration_tests/ ./integration_tests
    bash -c 'for f in ./integration_tests/*.feature; do behave --tags=-disabled "$f" || exit 1; done'
commands_post =
    rm ./integration_tests
